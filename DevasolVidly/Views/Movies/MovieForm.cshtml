@model DevasolVidly.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*Check whether a customer object exists at this time. A customer object will only exist if we are updating*@
@if (Model.Movie.Id == 0)
{
    <h2>Add Movie</h2>
}
else
{
    <h2>Edit Movie</h2>
}
@Html.ValidationSummary(true, "Please fix the following errors")
@using (Html.BeginForm("Save", "Movies"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.GenreId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.DateAdded)
        @Html.TextBoxFor(m => m.Movie.DateAdded, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.DateAdded)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.StockQuantity)
        @Html.TextBoxFor(m => m.Movie.StockQuantity, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.StockQuantity)
    </div>
    @Html.HiddenFor(m => m.Movie.Id)
    @Html.AntiForgeryToken()
    <button class=" = btn ntn-primary" type="submit">Save</button>
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")}

